"use client"
import React,{useEffect, useState} from 'react'
import NavBar from "../Components/NavBar"
import { auth } from '../firebase'
import { onAuthStateChanged } from 'firebase/auth'
import Image from 'next/image'
import { updateProfile } from 'firebase/auth';
import { signOut } from 'firebase/auth'
// import { updateCurrentUser } from 'firebase/auth';/
// import { trace } from 'console'

const page = () => {
const [user, setUser] = useState();
const [photo, setPhoto] = useState();
const [name , setName] = useState();
const [changedname , setChangedname] = useState();
const [changedemail , setChangedemail] = useState();
const [changedPhonenumber , setChangedPhonenumber] = useState();
const [changedImage , setChangedImage] = useState();


useEffect(()=>{
     onAuthStateChanged(auth , user => {
         if (user){
             setUser(user);
             setPhoto(user.photoURL);
             console.log(user);
             setName(user.displayName);
             
         }
         else{
             setUser(null);
         }
     })
   
 },[])


// const userinfo = user.user;
console.log(user);


  const hadlesubmit = (e) =>{
e.preventDefault(); //
        updateProfile(user, {
            displayName: changedname,
email:changedemail,
phoneNumber: changedPhonenumber,

        }).then(()=>{
         console.log(changedname)
         document.location.reload();
       })
 console.log(changedname)

     }
console.log()

const inputclassName = 'w-[30vw] h-[6vh] rounded-md p-1 border-none outline-none'
const onSignOut = () => {
  signOut(auth).then(()=>{
  document.location.href = "/log-in"

  })
}

// signOut(auth);

  return (
    <div>
<NavBar/>
<div className="top h-[30vh] w-screen bg-[#fff] flex items-center justify-center gap-4">
<Image src={photo} width={100} height={100} className='rounded-full'  alt='Profile Image'/>
<h1 className='text-2xl font-semibold'> 
{name}</h1>
</div> <br />
<div className="flex w-screen h-max flex-row gap-10 justify-center items-center">   
<div className="flex bg-[#afafaf] h-[70vh] w-[25%] absolute left-[0] rounded-md">
<ul>
<li className='w-[53.5vh] h-[8vh] flex items-center justify-center bg-[#fff] rounded-md'>Update Your Profile</li>
<li className='w-[53.5vh] h-[8vh] flex items-center justify-center bg-[#fff] rounded-md'>            <button onClick={onSignOut} className='w-full h-full'>Sign out</button>  <span></span>
</li>

</ul>
</div>
<form className="h-[70vh] w-max  flex items-center justify-center flex-col gap-4" >
    <div className="text-3xl font-semibold">Update Your Profile </div>
<b className='w-[30vw]'>ℹ️ You can also update one thing by just filing the input and clicking on the Update Your Profile</b>

<input type="text" value={changedname} placeholder='Name' onChange={(e)=>setChangedname(e.target.value)} className={inputclassName}  />
<input type="text" value={changedemail} placeholder='Email' onChange={(e)=>setChangedemail(e.target.value)} className={inputclassName}  />
<input type="text" value={changedPhonenumber} placeholder='Phone Number' onChange={(e)=>setChangedPhonenumber(e.target.value)} className={inputclassName}  />
<input type="file" value={changedImage} placeholder='Name' onChange={(e)=>setChangedImage(e.target.files[0])} className={inputclassName}  />
{/* <input type="text" value={changedname} placeholder='Name' onChange={(e)=>setChangedname(e.target.value)} className={inputclassName}  /> */}
<input type="submit" value="Update Your Profile"  onClick={hadlesubmit} className='w-[30vw] h-[6vh] rounded-md p-1 bg-[#0f0f0f] text-white hover:scale-110 cursor-pointer' />

</form>
</div>
    </div>
  )
}

export default page


// src/pages/Page.js

import React, { useState, useEffect } from 'react';
import NavBar from '../Components/NavBar';
import { auth, storage } from '../firebase';
import { ref, uploadBytes } from 'firebase/storage';
import { updateProfile, signOut, onAuthStateChanged } from 'firebase/auth';
import Image from 'next/image';
import Avatar from '../download.png';

const Page = () => {
  const [user, setUser] = useState(null);
  const [photo, setPhoto] = useState(Avatar);
  const [name, setName] = useState('');
  const [changedName, setChangedName] = useState('');
  const [changedEmail, setChangedEmail] = useState('');
  const [changedPhoneNumber, setChangedPhoneNumber] = useState('');
  const [changedImage, setChangedImage] = useState(null);

  useEffect(() => {
    onAuthStateChanged(auth, (user) => {
      if (user) {
        setUser(user);
        setPhoto(user.photoURL || Avatar);
        setName(user.displayName);
      } else {
        setUser(null);
      }
    });
  }, []);

  const handleImageUpload = async () => {
    try {
      const imgRef = ref(storage, '/uploads/images/a.png');
      const uploadResult = await uploadBytes(imgRef, changedImage);
      setChangedImage(uploadResult.ref.fullPath);
    } catch (error) {
      console.error('Error uploading image:', error);
    }
  };

  const handleSubmit = (e) => {
    e.preventDefault();

    updateProfile(user, {
      displayName: changedName,
      email: changedEmail,
      phoneNumber: changedPhoneNumber,
      photoURL: changedImage,
    })
      .then(() => {
        document.location.reload();
      })
      .catch((error) => {
        console.error('Error updating profile:', error);
        alert('Error updating profile');
      });
  };

  const inputClassName = 'w-[30vw] h-[6vh] rounded-md p-1 border-none outline-none';

  const handleSignOut = () => {
    signOut(auth).then(() => {
      document.location.href = '/log-in'; // Fix the typo here
    });
  };

  return (
    <div>  
      <NavBar/>
      <div className="top h-[30vh] w-screen bg-[#fff] flex items-center justify-center gap-4">
        <Image src={photo} width={100} height={100} className="rounded-full" alt="Profile Image" />
        <h1 className="text-2xl font-semibold">{name}</h1>
      </div>
      <br />
      <div className="flex w-screen h-max flex-row gap-10 justify-center items-center">
        <div className="flex bg-[#afafaf] h-[70vh] w-[25%] absolute left-[0] rounded-md">
          <ul>
            <li className="w-[53.5vh] h-[8vh] flex items-center justify-center bg-[#fff] rounded-md">
              Update Your Profile
            </li>
            <li className="w-[53.5vh] h-[8vh] flex items-center justify-center bg-[#fff] rounded-md">
              <button onClick={handleSignOut} className="w-full h-full">
                Sign out
              </button>
            </li>
          </ul>
        </div>
        <form className="h-[70vh] w-max flex items-center justify-center flex-col gap-4" onSubmit={handleSubmit}>
          <div className="text-3xl font-semibold">Update Your Profile</div>
          <b className="w-[30vw]">
            ℹ️ You can also update one thing by just filling the input and clicking on the Update Your Profile
          </b>
          <input
            type="text"
            value={changedName}
            placeholder="Name"
            onChange={(e) => setChangedName(e.target.value)}
            className={inputClassName}
          />
          <input
            type="text"
            value={changedEmail}
            placeholder="Email"
            onChange={(e) => setChangedEmail(e.target.value)}
            className={inputClassName}
          />
          <input
            type="text"
            value={changedPhoneNumber}
            placeholder="Phone Number"
            onChange={(e) => setChangedPhoneNumber(e.target.value)}
            className={inputClassName}
          />
          <input type="file" onChange={(e) => setChangedImage(e.target.files[0])} className={inputClassName} />
          <input
            type="submit"
            value="Update Your Profile"
            className="w-[30vw] h-[6vh] rounded-md p-1 bg-[#0f0f0f] text-white hover:scale